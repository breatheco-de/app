"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[7914],{"./src/stories/CodeViewer.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Logged:()=>Logged,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_common_components_CodeViewer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/common/components/CodeViewer.jsx"),_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;const __WEBPACK_DEFAULT_EXPORT__={title:"components/Code Viewer",component:_common_components_CodeViewer__WEBPACK_IMPORTED_MODULE_1__.Ay,argTypes:{allowNotLogged:{control:{type:"boolean"}},languagesData:{control:{type:"object"}}}};var Component=function Component(args,context){return __jsx(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.az,{width:(null==args?void 0:args.width)||"500px"},__jsx(_common_components_CodeViewer__WEBPACK_IMPORTED_MODULE_1__.Ay,args))};Component.displayName="Component";var Default=Component.bind({});Default.args={languagesData:[{label:"JS",language:"javascript",code:"console.log(1)"},{label:"Python",language:"python",code:"print(1)"},{label:"Html",language:"html",code:"\n  <h1>Hello world!</h1>\n  <div>\n    <p>\n      This is the html test\n    </p>\n  </div>\n"}]};var Logged=Component.bind({});Logged.args={languagesData:[{label:"JS",language:"javascript",code:"console.log(1)"},{label:"Python",language:"python",code:"print(1)"}],allowNotLogged:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args, context) => {\n  return <Box width={args?.width || '500px'}>\n      <CodeViewer {...args} />\n    </Box>;\n}",...Default.parameters?.docs?.source}}},Logged.parameters={...Logged.parameters,docs:{...Logged.parameters?.docs,source:{originalSource:"(args, context) => {\n  return <Box width={args?.width || '500px'}>\n      <CodeViewer {...args} />\n    </Box>;\n}",...Logged.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Logged"]}}]);